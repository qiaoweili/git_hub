Git 用法简介

初始化一个Git仓库，使用git init命令。
$ mkdir learngit
$ cd learngit
$ pwd
/Users/michael/learngit
$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/


添加文件到Git仓库，分两步：

使用命令git add <file>，注意，可反复多次使用，添加多个文件；
使用命令git commit -m <message>，完成。
$ git add file1.txt
$ git add file2.txt file3.txt
$ git commit -m "add 3 files."

要随时掌握工作区的状态，使用git status命令。
$ git status
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
$ git diff readme.txt 
按q退出git diff


HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。
$ git reset --hard HEAD^
上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD-100
查看文件 cat <文件名>
$ cat readme.txt
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
$ git log
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
$ git reflog
$ git reset --hard 1094a


要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
如果添加的时候地址写错了，或者就是想删除远程库，可以用git remote rm <name>命令。使用前，建议先用git remote -v查看远程库信息：
$ git remote -v
origin  git@github.com:michaelliao/learn-git.git (fetch)
origin  git@github.com:michaelliao/learn-git.git (push)
然后，根据名字删除，比如删除origin：
$ git remote rm origin

Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>或者git switch <name>

创建+切换分支：git checkout -b <name>或者git switch -c <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

